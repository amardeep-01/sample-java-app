
name: ACHIEVE-Service-CICD
 
on:
  push:
    branches:
      - 'msnunvn'
    tags:  
      - 'dev_v*'  
      - 'uat_v*'    
      - 'qa_v*'  
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select Environment
        options:
          - DEV
          - QA
          - UAT
 
jobs:
  deploymentjob:
    name: Deployment Job
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    outputs:
      output1: ${{ steps.value.outputs.ENV }}
    runs-on: windows-latest
    env:
      ENV: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
 
          
      - name: Determine Environment
        id: env
        if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        run: |
          Write-Output "Event Name: $env:GITHUB_EVENT_NAME"
          Write-Output "Ref: $env:GITHUB_REF"
          if ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') {
            Write-Output "::set-output name=env::${{ github.event.inputs.environment }}"
          } elseif ($env:GITHUB_REF -match '^refs/tags/') {
            $TAG = $env:GITHUB_REF
            Write-Output "Tag: $TAG"
            if ($TAG -match '^refs/tags/dev_v*') {
              $ENV = "DEV"
              Write-Output "::set-output name=env::$ENV"
            } elseif ($TAG -match '^refs/tags/uat_v*') {
              $ENV = "UAT"
              Write-Output "Environment: $ENV"
              Write-Output "::set-output name=env::$ENV"
            } elseif ($TAG -match '^refs/tags/qa_v*') {
              $ENV = "QA"
              Write-Output "::set-output name=env::$ENV"
            }
          }


      
      - name: Determine Environment
        id: value
        run: echo "ENV=test" >> "$ENV:GITHUB_OUTPUT"    
 
  dev_deployment:
    name: DEV Deployment
    needs: deploymentjob
    if: ${{ needs.deploymentjob.outputs.ENV == 'DEV' }}
    runs-on: [self-hosted, qa-test]
    steps:
      - env:
         OUTPUT1: ${{ needs.deploymentjob.outputs.output1 }}
        run: echo "$OUTPUT1" 
      
 
  qa_deployment:
    name: QA Deployment
    needs: deploymentjob
    if: ${{ needs.deploymentjob.outputs.ENV == 'QA' }}
    runs-on: [self-hosted, qa-test]
    steps:
      - name: Deploy to QA
        run: |
          # Add steps to deploy to QA environment
 
