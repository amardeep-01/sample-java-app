name: ACHIEVE-Service-CICD

on:
  push:
    branches:
      - '**' 
    tags:   
      - 'dev_v*'  
      - 'uat_v*'    
      - 'qa_v*'  
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select Environment
        options:
          - DEV
          - QA
          - UAT

jobs:
  deploymentjob:
    name: Deployment Job
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    runs-on: ${{ if eq(steps.env.outputs.env, 'DEV') }} 
                dev-runner
            ${{ else if eq(steps.env.outputs.env, 'QA') }}
                qa-runner
            ${{ endif }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Determine Environment
        id: env
        if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        run: |
          Write-Output "Event Name: $env:GITHUB_EVENT_NAME"
          Write-Output "Ref: $env:GITHUB_REF"
          if ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') {
            Write-Output "::set-output name=env::${{ github.event.inputs.environment }}"
          } elseif ($env:GITHUB_REF -match '^refs/tags/') {
            $TAG = $env:GITHUB_REF
            Write-Output "Tag: $TAG"
            if ($TAG -match '^refs/tags/dev_v*') {
              $ENV = "DEV"
              Write-Output "::set-output name=env::$ENV"
            } elseif ($TAG -match '^refs/tags/qa_v*') {
              $ENV = "QA"
              Write-Output "Environment: $ENV"
              Write-Output "::set-output name=env::$ENV"
            }
          }

          Write-Output "ENV: $ENV"
      
      - name: Build docker
        run: docker build -t image1 .

      - name: Save Docker image
        run: docker save -o image1.tar image1:latest
